// Code generated by protoc-gen-go.
// source: prime.proto
// DO NOT EDIT!

/*
Package primepb is a generated protocol buffer package.

It is generated from these files:
	prime.proto

It has these top-level messages:
	Prime
	PrimeRequest
	PrimeResponse
	PrimeStreamingRequest
	PrimeStreamingResponse
*/
package primepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Prime struct {
	Number int32 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
}

func (m *Prime) Reset()                    { *m = Prime{} }
func (m *Prime) String() string            { return proto.CompactTextString(m) }
func (*Prime) ProtoMessage()               {}
func (*Prime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Prime) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeRequest struct {
	Priming *Prime `protobuf:"bytes,1,opt,name=priming" json:"priming,omitempty"`
}

func (m *PrimeRequest) Reset()                    { *m = PrimeRequest{} }
func (m *PrimeRequest) String() string            { return proto.CompactTextString(m) }
func (*PrimeRequest) ProtoMessage()               {}
func (*PrimeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PrimeRequest) GetPriming() *Prime {
	if m != nil {
		return m.Priming
	}
	return nil
}

type PrimeResponse struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *PrimeResponse) Reset()                    { *m = PrimeResponse{} }
func (m *PrimeResponse) String() string            { return proto.CompactTextString(m) }
func (*PrimeResponse) ProtoMessage()               {}
func (*PrimeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PrimeResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimeStreamingRequest struct {
	Priming *Prime `protobuf:"bytes,1,opt,name=priming" json:"priming,omitempty"`
}

func (m *PrimeStreamingRequest) Reset()                    { *m = PrimeStreamingRequest{} }
func (m *PrimeStreamingRequest) String() string            { return proto.CompactTextString(m) }
func (*PrimeStreamingRequest) ProtoMessage()               {}
func (*PrimeStreamingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PrimeStreamingRequest) GetPriming() *Prime {
	if m != nil {
		return m.Priming
	}
	return nil
}

type PrimeStreamingResponse struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *PrimeStreamingResponse) Reset()                    { *m = PrimeStreamingResponse{} }
func (m *PrimeStreamingResponse) String() string            { return proto.CompactTextString(m) }
func (*PrimeStreamingResponse) ProtoMessage()               {}
func (*PrimeStreamingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PrimeStreamingResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Prime)(nil), "prime.Prime")
	proto.RegisterType((*PrimeRequest)(nil), "prime.PrimeRequest")
	proto.RegisterType((*PrimeResponse)(nil), "prime.PrimeResponse")
	proto.RegisterType((*PrimeStreamingRequest)(nil), "prime.PrimeStreamingRequest")
	proto.RegisterType((*PrimeStreamingResponse)(nil), "prime.PrimeStreamingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PrimeService service

type PrimeServiceClient interface {
	// Unary
	Prime(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (*PrimeResponse, error)
	// Server Streaming
	PrimeStreaming(ctx context.Context, in *PrimeStreamingRequest, opts ...grpc.CallOption) (PrimeService_PrimeStreamingClient, error)
}

type primeServiceClient struct {
	cc *grpc.ClientConn
}

func NewPrimeServiceClient(cc *grpc.ClientConn) PrimeServiceClient {
	return &primeServiceClient{cc}
}

func (c *primeServiceClient) Prime(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (*PrimeResponse, error) {
	out := new(PrimeResponse)
	err := grpc.Invoke(ctx, "/prime.PrimeService/Prime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *primeServiceClient) PrimeStreaming(ctx context.Context, in *PrimeStreamingRequest, opts ...grpc.CallOption) (PrimeService_PrimeStreamingClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_PrimeService_serviceDesc.Streams[0], c.cc, "/prime.PrimeService/PrimeStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &primeServicePrimeStreamingClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PrimeService_PrimeStreamingClient interface {
	Recv() (*PrimeStreamingResponse, error)
	grpc.ClientStream
}

type primeServicePrimeStreamingClient struct {
	grpc.ClientStream
}

func (x *primeServicePrimeStreamingClient) Recv() (*PrimeStreamingResponse, error) {
	m := new(PrimeStreamingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for PrimeService service

type PrimeServiceServer interface {
	// Unary
	Prime(context.Context, *PrimeRequest) (*PrimeResponse, error)
	// Server Streaming
	PrimeStreaming(*PrimeStreamingRequest, PrimeService_PrimeStreamingServer) error
}

func RegisterPrimeServiceServer(s *grpc.Server, srv PrimeServiceServer) {
	s.RegisterService(&_PrimeService_serviceDesc, srv)
}

func _PrimeService_Prime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrimeServiceServer).Prime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prime.PrimeService/Prime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrimeServiceServer).Prime(ctx, req.(*PrimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrimeService_PrimeStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeStreamingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PrimeServiceServer).PrimeStreaming(m, &primeServicePrimeStreamingServer{stream})
}

type PrimeService_PrimeStreamingServer interface {
	Send(*PrimeStreamingResponse) error
	grpc.ServerStream
}

type primeServicePrimeStreamingServer struct {
	grpc.ServerStream
}

func (x *primeServicePrimeStreamingServer) Send(m *PrimeStreamingResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PrimeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "prime.PrimeService",
	HandlerType: (*PrimeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Prime",
			Handler:    _PrimeService_Prime_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeStreaming",
			Handler:       _PrimeService_PrimeStreaming_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "prime.proto",
}

func init() { proto.RegisterFile("prime.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x28, 0xca, 0xcc,
	0x4d, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0xe4, 0xb9, 0x58, 0x03,
	0x40, 0x0c, 0x21, 0x31, 0x2e, 0xb6, 0xbc, 0xd2, 0xdc, 0xa4, 0xd4, 0x22, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0xd6, 0x20, 0x28, 0x4f, 0xc9, 0x8c, 0x8b, 0x07, 0xac, 0x20, 0x28, 0xb5, 0xb0, 0x34, 0xb5,
	0xb8, 0x44, 0x48, 0x8d, 0x8b, 0x1d, 0xa4, 0x33, 0x33, 0x2f, 0x1d, 0xac, 0x90, 0xdb, 0x88, 0x47,
	0x0f, 0x62, 0x2c, 0x44, 0x15, 0x4c, 0x52, 0x49, 0x9d, 0x8b, 0x17, 0xaa, 0xaf, 0xb8, 0x20, 0x3f,
	0xaf, 0x18, 0x6c, 0x41, 0x51, 0x6a, 0x71, 0x69, 0x4e, 0x09, 0xcc, 0x02, 0x08, 0x4f, 0xc9, 0x9e,
	0x4b, 0x14, 0xac, 0x30, 0xb8, 0xa4, 0x28, 0x35, 0x11, 0xa4, 0x95, 0x54, 0x9b, 0x0c, 0xb8, 0xc4,
	0xd0, 0x0d, 0xc0, 0x6f, 0xa5, 0xd1, 0x74, 0x46, 0xa8, 0xa7, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93,
	0x53, 0x85, 0x4c, 0x60, 0xa1, 0x20, 0x8c, 0x62, 0x05, 0xc4, 0x21, 0x52, 0x22, 0xa8, 0x82, 0x10,
	0xc3, 0x95, 0x18, 0x84, 0x02, 0xb9, 0xf8, 0x50, 0x2d, 0x16, 0x92, 0x41, 0x56, 0x89, 0xee, 0x21,
	0x29, 0x59, 0x1c, 0xb2, 0x30, 0x03, 0x0d, 0x18, 0x9d, 0x38, 0xa3, 0xc0, 0xde, 0x4a, 0x2d, 0x48,
	0x4a, 0x62, 0x03, 0xc7, 0x93, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xfa, 0x4e, 0x94, 0x6e, 0xb6,
	0x01, 0x00, 0x00,
}
